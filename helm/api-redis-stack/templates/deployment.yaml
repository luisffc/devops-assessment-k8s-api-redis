apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-redis-stack.fullname" . }}-api
  labels:
    {{- include "api-redis-stack.api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "api-redis-stack.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "api-redis-stack.api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.api.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "api-redis-stack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Values.api.name }}
          securityContext:
            {{- toYaml .Values.api.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.targetPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.api.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.api.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          env:
            - name: REDIS_HOST
              value: "{{ include "api-redis-stack.redis.fullname" . }}"
            - name: REDIS_PORT
              value: "6379"
            - name: CACHE_TTL
              value: "{{ .Values.api.env.CACHE_TTL | default "300" }}"
            - name: DEBUG
              value: "{{ .Values.api.env.DEBUG | default "false" }}"
            {{- if .Values.secretsManager.enabled }}
            - name: REDIS_PASSWORD_FILE
              value: "/etc/secrets/redis-password"
            {{- else }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.auth.existingSecret | default "api-redis-redis-secret" }}
                  key: {{ .Values.redis.auth.existingSecretPasswordKey | default "password" }}
            {{- end }}
          {{- if .Values.secretsManager.enabled }}
          volumeMounts:
            - name: redis-secret
              mountPath: "/etc/secrets"
              readOnly: true
          {{- end }}
      {{- if .Values.secretsManager.enabled }}
      volumes:
        - name: redis-secret
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "api-redis-stack.fullname" . }}-redis-secret
      {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
